buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://4thline.org/m2'
    }
}

dependencies {
    // Android support
    compile 'com.android.support:support-v4:+'

    // Cling
    compile group: 'org.fourthline.cling', name: 'cling-core', version:'2.0.1'
    compile group: 'org.fourthline.cling', name: 'cling-support', version:'2.0.1'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version:'8.1.12.v20130726'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'8.1.12.v20130726'
    compile group: 'org.eclipse.jetty', name: 'jetty-client', version:'8.1.12.v20130726'
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version:'1.7.5'

    // Pull To Refresh
    compile 'com.github.chrisbanes.actionbarpulltorefresh:library:+'
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs { release }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/res']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
}

File propFile = file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
        android.buildTypes.release.signingConfig = null
}
